{
  "src/lib/components/CircuitGraph.react.js": {
    "description": "Assumes horizontal stack",
    "displayName": "CircuitGraph",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      },
      "clickData": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Data from latest click event. Read-only.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "mapData": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Data from latest click event. Read-only.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/CircuitMap.react.js": {
    "description": "Assumes horizontal stack",
    "displayName": "CircuitMap",
    "methods": [
      {
        "name": "scaleError",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "info",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "convertToHex",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "rgb",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "createErrorLists",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "error_type",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "createElements",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "colorArray",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "createLegend",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "error_list",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "createPopUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "id",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "setUpListeners",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "componentDidMount",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      },
      "clickData": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Data from latest click event. Read-only.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "hoverNodeData": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Data of hovered node"
      }
    }
  }
}